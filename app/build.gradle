ext {
    versionName = '0.1'
    VSC = 'https://git.exozet.com/exozet-mobile/AndroidCore'
}
apply from: "${project.rootDir}/dependencies/utils.gradle"

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'
apply plugin: 'io.fabric'
apply plugin: 'com.github.gfx.ribbonizer'
apply plugin: 'build-time-tracker'
apply plugin: 'img-optimizer'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'android-rocket-launcher'

android {
    compileSdkVersion compileSdkVer
    buildToolsVersion buildToolsVer

    defaultConfig {
        applicationId "com.exozet.android.core.demo"
        multiDexEnabled true

        minSdkVersion minSdkVer
        targetSdkVersion targetSdkVer
        versionCode commitCount()
        versionName simpleReleaseVersionName()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        try {
            debug {
                storeFile file('../debug.jks')
                storePassword DEBUG_STORE_PASSWORD
                keyAlias DEBUG_KEYSTORE_ALLIAS
                keyPassword DEBUG_KEY_PASSWORD
            }
        }
        catch (final ignored) {
            throw new InvalidUserDataException('You should define DEBUG_KEYSTORE_ALLIAS, DEBUG_STORE_PASSWORD, DEBUG_KEY_PASSWORD in gradle.properties.')
        }
        try {
            release {
                storeFile file('../release.jks')
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEYSTORE_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        } catch (final ignored) {
            throw new InvalidUserDataException('You should define RELEASE_KEYSTORE_ALIAS, RELEASE_STORE_PASSWORD, RELEASE_KEY_PASSWORD in gradle.properties.')
        }
    }

    buildTypes {

        debug {
            signingConfig signingConfigs.debug
            pseudoLocalesEnabled false
            debuggable true
            minifyEnabled false
            crunchPngs false
            shrinkResources false
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            initWith(buildTypes.debug)
            applicationIdSuffix ""
            signingConfig signingConfigs.release
            debuggable false
            minifyEnabled false
            crunchPngs false
            shrinkResources false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // region test options

    testOptions {
        unitTests.all {
            jvmArgs '-noverify'
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen { false }
                showStandardStreams = true
            }
            ignoreFailures = true
        }
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation libs.multidex

    androidTestImplementation androidTestLibs.espressoRunner
    androidTestImplementation androidTestLibs.espressoCore

    testImplementation testLibs.junit
    testImplementation testLibs.jsonUnit
    testImplementation testLibs.jsonUnitFluent
    testImplementation testLibs.robolectric
    testImplementation testLibs.truth

    implementation libs.kotlinJre8
    implementation libs.appcompat

    implementation libs.rx2java
    implementation libs.rx2Android

    implementation project(':core')
    implementation libs.logger
}

configurations.all {
    resolutionStrategy.force libs.multidex
    resolutionStrategy.force libs.supportAnnotations
    resolutionStrategy.force libs.supportV4
    resolutionStrategy.force libs.supportV13
    resolutionStrategy.force libs.appcompat
    resolutionStrategy.force libs.cardview
    resolutionStrategy.force libs.recyclerview
    resolutionStrategy.force libs.design
    resolutionStrategy.force libs.guava
    resolutionStrategy.force libs.playServicesAuth
    resolutionStrategy.force libs.firebaseCore
    resolutionStrategy.force libs.firebaseMessaging
    resolutionStrategy.force libs.firebaseJobdispatcher
    resolutionStrategy.force libs.lifecycleExtensions
    resolutionStrategy.force libs.lifecycleCommonJava8
    resolutionStrategy.force libs.lifecycleRactiveStreams
}

// region build time tracker

buildtimetracker {
    reporters {
        csv {
            output "build/times.csv"
            append true
            header false
        }

        summary {
            ordered false
            threshold 50
            barstyle "unicode"
        }

        csvSummary {
            csv "build/times.csv"
        }
    }
}

// endregion

apply plugin: 'com.google.gms.google-services'